{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["pdfMake","vfs","pdfFonts","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addToList","e","preventDefault","links","state","currentValue","split","forEach","element","getMetrics","getMetricsRefresh","pageData","postData","setState","loading","url","type","postId","facebookData","pageId","value","concat","window","FB","api","access_token","response","link","pageName","text","name","message","created_time","Date","toLocaleString","impressions","insights","data","values","reach","engagement","valueList","push","saveToDB","currentPage","includes","slice","pop","deleteRow","oldData","_","remove","db","firebase","collection","doc","appUserID","get","then","exists","undefined","archive","set","merge","console","log","catch","error","handleInputChange","target","handleDropdownChange","_ref","handleSort","clickedColumn","_this$state","column","direction","reverse","sortBy","accessToken","items","loadFacebook","bind","assertThisInitialized","forceRefresh","buildReport","firebaseUI","signOut","_this2","apiKey","authDomain","projectId","onAuthStateChanged","user","loginFacebook","uid","_this3","ui","firebaseui","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","credential","signInFlow","signInOptions","provider","FacebookAuthProvider","PROVIDER_ID","scopes","customParameters","auth_type","start","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","fbAsyncInit","init","appId","autoLogAppEvents","xfbml","version","_this4","getLoginStatus","status","getFromDB","populateSelect","_this5","orderBy","react_default","a","Loader","active","disabled","_this6","pdfData","moment","fromNow","color","docDefinition","pageOrientation","pageSize","content","margin","fontSize","layout","table","widths","body","format","createPdf","open","pages","sort","b","localeCompare","_this7","_this$state2","className","Container","fluid","Grid","centered","padded","columns","Row","Column","width","Header","as","icon","textAlign","Icon","Content","Segment","Fragment","Label","circular","empty","Form","onSubmit","Group","TextArea","defaultValue","onChange","required","placeholder","Select","options","Button","fitted","onClick","loader","Table","striped","compact","sortable","fixed","singleLine","HeaderCell","sorted","Body","map","_ref2","key","Cell","size","href","rel","basic","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fb95105.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firebase-app';\nimport 'firebase/firebase-firestore';\nimport * as firebaseui from 'firebaseui';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Form,\n  TextArea,\n  Button,\n  Select,\n  Loader,\n  Table,\n  Segment,\n  Label\n} from 'semantic-ui-react';\n\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: '',\n      currentValue: '',\n      currentPage: '',\n      data: [],\n      oldData: [],\n      facebookData: [],\n      items: [],\n      loading: false,\n      appUserID: '',\n      column: null,\n      direction: null\n    };\n    this.loadFacebook = this.loadFacebook.bind(this);\n    this.addToList = this.addToList.bind(this);\n    this.forceRefresh = this.forceRefresh.bind(this);\n    this.buildReport = this.buildReport.bind(this);\n    this.firebaseUI = this.firebaseUI.bind(this);\n    this.deleteRow = this.deleteRow.bind(this);\n    this.signOut = this.signOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFacebook();\n    var config = {\n      apiKey: 'AIzaSyA_767ieKDCRaS8OgWK-Kr9aDAtzk2HLIo',\n      authDomain: 'editorial-tracker-cd9cd.firebaseapp.com',\n      projectId: 'editorial-tracker-cd9cd'\n    };\n    firebase.initializeApp(config);\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.loginFacebook();\n        this.setState({appUserID: user.uid});\n        console.log(user.uid)\n        this.setState({loading: true});\n      } else {\n        this.firebaseUI();\n      }\n    });\n  }\n\n  firebaseUI() {\n    var ui = new firebaseui.auth.AuthUI(firebase.auth());\n    var uiConfig = {\n      callbacks: {\n        signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n          this.setState({accessToken: authResult.credential.accessToken});\n          this.loginFacebook();\n          return false;\n        }\n      },\n      signInFlow: 'popup',\n      signInOptions: [\n        {\n          provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n          scopes: ['manage_pages', 'read_insights'],\n          customParameters: {\n            auth_type: 'reauthenticate'\n          }\n        }\n      ]\n    };\n    ui.start('#firebaseui-auth-container', uiConfig);\n  }\n\n  signOut() {\n    firebase.auth().signOut();\n    this.setState({data: []});\n  }\n\n  loadFacebook() {\n    ((d, s, id) => {\n      var js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n\n    window.fbAsyncInit = () => {\n      window.FB.init({\n        appId: '1497929310342175',\n        autoLogAppEvents: true,\n        xfbml: true,\n        version: 'v3.2',\n        state: true\n      });\n    };\n  }\n\n  loginFacebook() {\n    window.FB.getLoginStatus((response) => {\n      if (response.status === 'connected') {\n        window.FB.api(\n          '/me/accounts?fields=id,name,access_token',\n          (response) => {\n            this.setState({facebookData: response.data});\n            this.getFromDB();\n            this.populateSelect();\n          }\n        );\n      } else {\n        console.log('Login Failed!');\n      }\n    });\n  }\n\n  getFromDB() {\n    const db = firebase.firestore();\n    var docRef = db.collection('records').doc(this.state.appUserID);\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          let data = _.orderBy(doc.data().data, 'reach', 'asc');\n          this.setState({\n            loading: false,\n            data: data,\n            column: 'reach',\n            direction: 'ascending'\n          });\n        } else {\n          console.log('No such document!');\n          this.setState({loading: false});\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document', error);\n      });\n  }\n\n  saveToDB() {\n    const db = firebase.firestore();\n    db.collection('records')\n      .doc(this.state.appUserID)\n      .set(\n        {\n          data: this.state.data\n        },\n        {merge: true}\n      );\n  }\n\n  loader() {\n    if (this.state.loading) {\n      return <Loader active />;\n    } else {\n      return <Loader disabled />;\n    }\n  }\n\n  forceRefresh() {\n    this.setState({oldData: this.state.data, data: []});\n    this.state.data.forEach((element) => {\n      this.getMetricsRefresh(element);\n    });\n  }\n\n  buildReport() {\n    let pdfData = [];\n    let data = _.orderBy(this.state.data, 'reach', 'asc');\n    pdfData.push([\n      'Page',\n      'Name',\n      'Impressions',\n      'Reach',\n      'Engagement',\n      'Age',\n      'Link'\n    ]);\n    _.forEach(data, (element) => {\n      let reach = {text: element.reach.toLocaleString()};\n      if (element.reach < 25000) {\n        reach['fillColor'] = '#F08080';\n      } else if (element.reach < 50000) {\n        reach['fillColor'] = '#FF8C00';\n      } else if (element.reach < 100000) {\n        reach['fillColor'] = '#FFFF00';\n      } else if (element.reach < 500000) {\n        reach['fillColor'] = '#00FF7F';\n      }\n      pdfData.push([\n        element.pageName,\n        element.name,\n        element.impressions.toLocaleString(),\n        reach,\n        element.engagement.toLocaleString(),\n        moment(element.created_time, 'DD/MM/YYYY h:mm a').fromNow(),\n        {text: 'Link', link: element.link, color: 'blue'}\n      ]);\n    });\n\n    var docDefinition = {\n      pageOrientation: 'landscape',\n      pageSize: 'A4',\n      content: [\n        {text: 'Facebook Reach Tracker', margin: [0, 0, 0, 16], fontSize: 24},\n        {\n          layout: 'lightHorizontalLines',\n          table: {\n            widths: ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto'],\n            body: pdfData\n          }\n        },\n        {\n          text: 'Generated on ' + moment().format('MMMM Do YYYY, h:mm:ss a'),\n          margin: [0, 16, 0, 0],\n          fontSize: 8\n        }\n      ]\n    };\n    pdfMake.createPdf(docDefinition).open();\n  }\n\n  populateSelect() {\n    let pages = [];\n    this.state.facebookData.forEach((element) => {\n      pages.push({\n        value: element.id,\n        text: element.name,\n        access_token: element.access_token\n      });\n    });\n    pages.sort((a, b) => {\n      return a.text.localeCompare(b.text);\n    });\n    this.setState({facebookData: pages});\n  }\n\n  addToList = (e) => {\n    e.preventDefault();\n    let links = this.state.currentValue;\n    links = links.split('\\n');\n    links.forEach((element) => {\n      this.getMetrics(element);\n    });\n  };\n\n  getMetricsRefresh = (element) => {\n    this.setState({loading: true});\n    let pageData;\n    let postData;\n    let type = element.type;\n    let postId = element.postId;\n    let url;\n    this.state.facebookData.forEach((e) => {\n      if (element.pageId === e.value) {\n        pageData = e;\n      }\n    });\n    if (type === 'video') {\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_video_views),name,message,created_time`;\n    } else {\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_clicks),name,message,created_time`;\n    }\n    window.FB.api(\n      url,\n      {\n        access_token: pageData.access_token\n      },\n      (response) => {\n        if (type === 'video') {\n          postData = {\n            link: element.link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[2].values[0].value,\n            reach: response.insights.data[3].values[0].value,\n            engagement: response.insights.data[1].values[0].value\n          };\n        } else {\n          postData = {\n            link: element.link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[0].values[0].value,\n            reach: response.insights.data[1].values[0].value,\n            engagement: response.insights.data[2].values[0].value\n          };\n        }\n        let valueList = this.state.data;\n        valueList.push(postData);\n        this.setState({data: valueList});\n        this.saveToDB();\n        this.setState({loading: false});\n      }\n    );\n  };\n\n  getMetrics = (link) => {\n    let pageData;\n    let postData;\n    let type;\n    let postId;\n    let url;\n    this.state.facebookData.forEach((element) => {\n      if (this.state.currentPage === element.value) {\n        pageData = element;\n      }\n    });\n    if (link.includes('videos')) {\n      type = 'video';\n      postId = link\n        .slice(0, -1)\n        .split('/')\n        .pop();\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_video_views),name,message,created_time`;\n    } else {\n      type = 'posts';\n      postId = link.split('/').pop();\n      url = `/${\n        pageData.value\n      }_${postId}/?fields=insights.metric(post_impressions,post_impressions_unique,post_clicks),name,message,created_time`;\n    }\n    window.FB.api(\n      url,\n      {\n        access_token: pageData.access_token\n      },\n      (response) => {\n        if (type === 'video') {\n          postData = {\n            link: link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[2].values[0].value,\n            reach: response.insights.data[3].values[0].value,\n            engagement: response.insights.data[1].values[0].value\n          };\n        } else {\n          postData = {\n            link: link,\n            postId: postId,\n            pageId: pageData.value,\n            pageName: pageData.text,\n            type: type,\n            name: response.name,\n            message: response.message,\n            created_time: new Date(response.created_time).toLocaleString(\n              'en-SG'\n            ),\n            impressions: response.insights.data[0].values[0].value,\n            reach: response.insights.data[1].values[0].value,\n            engagement: response.insights.data[2].values[0].value\n          };\n        }\n\n        let valueList = this.state.data;\n        valueList.push(postData);\n        this.setState({data: valueList, currentValue: ''});\n        this.saveToDB();\n      }\n    );\n  };\n\n  deleteRow = (postId) => {\n    let data = this.state.data;\n    let oldData = _.remove(data, (element) => {\n      if (element.postId === postId) {\n        return true;\n      }\n    });\n    this.setState({data: data});\n    this.saveToDB();\n    const db = firebase.firestore();\n    var docRef = db.collection('records').doc(this.state.appUserID);\n    docRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          if (doc.data().archive !== undefined) {\n            let archive = doc.data().archive;\n            archive.push(oldData[0]);\n            db.collection('records')\n              .doc(this.state.appUserID)\n              .set(\n                {\n                  archive: archive\n                },\n                {merge: true}\n              );\n          } else {\n            db.collection('records')\n              .doc(this.state.appUserID)\n              .set(\n                {\n                  archive: oldData\n                },\n                {merge: true}\n              );\n          }\n        } else {\n          console.log('No such document!');\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document', error);\n      });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({currentValue: e.target.value.split('?')[0]});\n  };\n\n  handleDropdownChange = (e, {value}) => {\n    this.setState({\n      currentPage: value\n    });\n  };\n\n  handleSort = (clickedColumn) => () => {\n    const {column, data, direction} = this.state;\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending'\n      });\n\n      return;\n    }\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending'\n    });\n  };\n\n  render() {\n    const {column, direction} = this.state;\n    return (\n      <div className=\"App\">\n        <Container fluid>\n          <Grid centered padded columns={3}>\n            <Grid.Row centered>\n              <Grid.Column width={3} />\n              <Grid.Column width={10}>\n                <Header as=\"h1\" icon textAlign=\"center\">\n                  <Icon name=\"facebook\" />\n                  <Header.Content>Facebook Insights Tracker</Header.Content>\n                </Header>\n                <div id=\"firebaseui-auth-container\" />\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Segment>\n                  <Header>Legend</Header>\n                  <>\n                    <Label circular color=\"red\" empty />\n                    {' < 25,000'}\n                    <br />\n                    <Label circular color=\"orange\" empty />\n                    {' < 50,000'}\n                    <br />\n                    <Label circular color=\"yellow\" empty />\n                    {' < 100,000'}\n                    <br />\n                    <Label circular color=\"green\" empty />\n                    {' < 500,000'}\n                    <br />\n                    <Label circular color=\"blue\" empty />\n                    {' > 500,000'}\n                  </>\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n            <Container>\n              <Form onSubmit={this.addToList}>\n                <Form.Group>\n                  <TextArea\n                    defaultValue={this.state.currentValue}\n                    onChange={this.handleInputChange}\n                    fluid\n                    required\n                    placeholder=\"Link\"\n                    type=\"text\"\n                    value={this.state.currentValue}\n                    width={8}\n                  />\n                  <Select\n                    placeholder=\"Page\"\n                    options={this.state.facebookData}\n                    onChange={this.handleDropdownChange}\n                    width={3}\n                  />\n                  <Button type=\"submit\" width={3}>\n                    <Icon fitted name=\"add\" />\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Container>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                <Button\n                  color=\"green\"\n                  content=\"Force Refresh\"\n                  onClick={this.forceRefresh}\n                />\n                {/* <Button\n                  color=\"teal\"\n                  content=\"Get Video\"\n                  onClick={this.forceRefresh}\n                /> */}\n                <Button\n                  color=\"blue\"\n                  content=\"Export Report\"\n                  onClick={this.buildReport}\n                />\n                <Button content=\"Sign Out\" onClick={this.signOut} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={10}>\n                {this.loader()}\n                <Table striped compact sortable fixed singleLine>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Page</Table.HeaderCell>\n                      <Table.HeaderCell>Name</Table.HeaderCell>\n                      {/* <Table.HeaderCell>Message</Table.HeaderCell> */}\n                      <Table.HeaderCell\n                        sorted={column === 'impressions' ? direction : null}\n                        onClick={this.handleSort('impressions')}\n                      >\n                        Impressions\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === 'reach' ? direction : null}\n                        onClick={this.handleSort('reach')}\n                      >\n                        Reach\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === 'engagement' ? direction : null}\n                        onClick={this.handleSort('engagement')}\n                      >\n                        Engagement\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Age</Table.HeaderCell>\n                      <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {_.map(\n                      this.state.data,\n                      ({\n                        pageName,\n                        postId,\n                        name,\n                        impressions,\n                        reach,\n                        engagement,\n                        link,\n                        type,\n                        created_time\n                      }) => (\n                        <Table.Row key={postId}>\n                          <Table.Cell>{pageName}</Table.Cell>\n                          <Table.Cell>{name}</Table.Cell>\n                          <Table.Cell>\n                            {impressions.toLocaleString()}\n                          </Table.Cell>\n                          <Table.Cell>\n                            {reach < 25000 ? (\n                              <Label color=\"red\" size=\"large\">\n                                <Icon name=\"warning sign\" />\n                                {reach.toLocaleString()}\n                              </Label>\n                            ) : reach < 50000 ? (\n                              <Label color=\"orange\" size=\"large\">\n                                <Icon name=\"attention\" />\n                                {reach.toLocaleString()}\n                              </Label>\n                            ) : reach < 100000 ? (\n                              <Label color=\"yellow\" size=\"large\">\n                                <Icon name=\"star half full\" />\n                                {reach.toLocaleString()}\n                              </Label>\n                            ) : reach < 500000 ? (\n                              <Label color=\"green\" size=\"large\">\n                                <Icon name=\"star\" />\n                                {reach.toLocaleString()}\n                              </Label>\n                            ) : (\n                              <Label color=\"blue\" size=\"large\">\n                                <Icon name=\"diamond\" />\n                                {reach.toLocaleString()}\n                              </Label>\n                            )}\n                          </Table.Cell>\n                          <Table.Cell>\n                            <p>\n                              {type === 'video'\n                                ? 'Video Views '\n                                : 'Post Clicks '}\n                            </p>\n                            {engagement.toLocaleString()}\n                          </Table.Cell>\n                          <Table.Cell>\n                            {moment(\n                              created_time,\n                              'DD/MM/YYYY h:mm a'\n                            ).fromNow()}\n                          </Table.Cell>\n                          <Table.Cell textAlign=\"center\">\n                            <a\n                              href={link}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <Button basic color=\"blue\" icon=\"eye\" />\n                            </a>\n                            <Button\n                              basic\n                              color=\"red\"\n                              icon=\"trash alternate outline\"\n                              onClick={() => this.deleteRow(postId)}\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    )}\n                  </Table.Body>\n                </Table>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'firebaseui/dist/firebaseui.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}